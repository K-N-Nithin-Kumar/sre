                                 ------------------------------------------ RMQ ------------------------------------

=>  For automating scripts 4 new Vm's were created and one Vm was considered as an (Ansible-Control-Machine)
=>  Ansible was Installed in one Vm.


                                 ------------------------------------------ ANSIBLE INSTALLATION ------------------------------------
=>On one of the Machine called as Ansible Control Machine.
=> Ansible was installed.

=> sudo apt update
=> sudo apt install ansible                                                                   // Installs Ansible Software.

=>Post installing ansible software.
=>In the directory /etc/ansible.
=>Two files were present =>ansible.cfg and hosts files were present.

=> Configuring ansible.cfg file add the following lines                                      (applicable for only on Ubuntu -18.04 version only)

[defaults]
ansible_python_interpreter=/usr/bin/python3                                                     // Add default python version as python3

                                    ------------------------------------------ SSH CONNECTION------------------------------------
=> For ansible, we have to communicate between the Ansible Control Machine and the 3 Hosts
=> In the Ansible Control Machine 
=> execute => ssh-keygen -t rsa

=> For vm-1 =>  ssh-copy-id ans22@192.168.1.38 
=> For vm-2 =>  ssh-copy-id ans40@192.168.1.49 
=> For vm-3 =>  ssh-copy-id ans43@192.168.1.50


                                     ------------------------------------------ cd /etc/ansible/hosts------------------------------------

=> In the hosts file add.
=> Add the Neighbour's Vm's IP's where the playbook is used to be implemented.
=> Add  the  groups and name those under the group.

=> In my case it was added under Different groups where the clustering procces can be implemented smoothly.
=>
[all1]
ans22@192.168.1.38                                                                                  // VM-1 Hosts Username and IP group name =[all1]
[all2]
ans40@192.168.1.49                                                                                 // VM-2 Hosts Username and IP group name =[all2]
[all3]
ans43@192.168.1.50                                                                                // VM-3 Hosts Username and IP group name =[all3]
[all4]
ans22@192.168.1.38  
ans40@192.168.1.49  
ans43@192.168.1.50    



                                ------------------------------------------ Check Connectivity------------------------------------
=> On ansible control machine execute the command => ansible -m ping all ( This shows "ping -pong green color )
=> This says the connection is successful.



                                ------------------------------------------ INSTALLING ERLANG------------------------------------

=> RabbitMQ codes are executed with the help of erlang language. Hence it's important to install Erlang.
=> 

Firsty the seperate jinga file was created. To specify the particular Version of erlang to be installed. (The file name was "raju1.j2")
=> In the directory /etc/ansible
=> nano raju1.j2 (creating new file)
=> Inside this the following contents was mentioned.
     > Package: erlang* esl-erlang
         Pin: version 1:21.3*   
        Pin-Priority: 501



                                    ------------------------------------------ ERLANG.yml------------------------------------
>
  
---                                                                                                                        // Indicates starting of yml file ---
- name: Erlang                                                                                                             // name: specifiying (Erlang) 
  hosts: all4                                                                                                                       
  become: true                                                                                                          
  become_method: sudo                                                                                                      // Run as root user      
  tasks:                                                                                                                   //  Tasks to be completed under Tasks  

    - name: Update repositories cache and install                                                                          // Similar to command apt-update 
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Adding erlang keys                                                                                              // Adding Erlang keys
      command: apt-key adv --fetch-keys 'https://packages.erlang-solutions.com/debian/erlang_solutions.asc'


#    - name: Verify Python is Installed                                                                                     // This is optional to check python packages
#      apt: pkg=python-software-properties state=present


    - name: Add erlang official Repo                                                                                        // Adding Erlang repository
      apt_repository:
        repo: deb https://packages.erlang-solutions.com/ubuntu bionic contrib
        state: present
        filename: erlang

    - name: Copy the version file                                                                                           // The above created file in the previous step
      template:                                                                                                            
        src: "raju1.j2"                                                                                                     // Source=> file name created    
        dest: "/etc/apt/preferences.d/erlang"                                                                               // Destination=> location the file to be stored

    - name: Install Erlang Packages                                                                                         // Installing Erlang
      apt:
        name:
          - erlang

=> In the 3 Host Vm's the installation can be verified by running erl-eval command and check the erlang shell


                            ------------------------------------------ RMQ.yml------------------------------------
=> Post Installing erlang. Now should Install RabbitMQ message broker.

=>The Installation of RMQ (Playbook looked like this)

>
 ---
- name: RMQ
  hosts: all4
  become: true
  become_method: sudo
  tasks:

    - name: Update repositories cache and install                                                                                   // Before installing update system
      apt:
        update_cache: yes
        cache_valid_time: 3600


    - name: Add RMQ Keys                                                                                                            // Link to RMQ -officila Keys      
      apt_key:
        url: 'https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey'

    - name: Add RMQ Repo                                                                                                        
      apt_repository:
        repo: deb https://packagecloud.io/rabbitmq/rabbitmq-server/ubuntu/ bionic main                                             // Adding Official Repo-1
        state: present
        filename: rabbitmq


    - name: Add RMQ Repo-2
      apt_repository:
        repo: deb-src https://packagecloud.io/rabbitmq/rabbitmq-server/ubuntu/ bionic main                                         // Adding Official Repo-2 
        state: present
        filename: rabbitmq

    - name: Update repositories cache and install                                                                                   // Post adding the repos apt-update
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: install extra Packages                                                                                                   // Intalling Extra erlang packages                                                                                    
      apt:
        name:
          - erlang-base
          - erlang-asn1
          - erlang-crypto
          - erlang-eldap
          - erlang-ftp
          - erlang-inets
          - erlang-mnesia
          - erlang-os-mon
          - erlang-parsetools
          - erlang-public-key
          - erlang-runtime-tools
          - erlang-snmp
          - erlang-ssl
          - erlang-syntax-tools
          - erlang-tftp
          - erlang-tools
          - erlang-xmerl

    - name: Install RMQ Packages                                                                                                     // Installing specific version of RMQ
      apt:
        update_cache: True
        name: rabbitmq-server=3.7.9-1



                            ------------------------------------------RMQ CLUSTERS------------------------------------
=>Configure 3 node RMQ cluster.
=> The steps followed were => copy the erlang cookie from the Master Vm (Consider VM-1 as master i.e ans22@192.168.1.38)
=> In the Vm post installing RMQ and Erlang Copied the Erlang Cookie value from => /var/lib/rabbitmq/.erlang.cookie    (EYWASHUAFSQEKLKLJKPL)

=> Copied the value and in the Ansible Control Machine created a jinga file.
=> In the directory /etc/ansible
      >raju3.j2             (new file)
      >EYWASHUAFSQEKLKLJKPL (Erlang Cookie)


                            ------------------------------------------erlangcopy.yml------------------------------------
=> To replicate the same erlang cookie on the VM-2 and VM-3 ( The yml file was as follows)
=> VM-2 (ans40@192.168.1.49)
=> VM-3 (ans43@192.168.1.50)

--
- name: Cookie
  hosts: all2      // all3                                                                                                  // To be replicated on VM-2 and VM-3              
  become: true
  become_method: sudo
  tasks:
    - name: backup old erlang cookie                                                                                        // Copied the old erlang cookie to a file .erlang.cookie.old 
      shell: cp -a /var/lib/rabbitmq/.erlang.cookie /var/lib/rabbitmq/.erlang.cookie.old                                    // as a backup 
      changed_when: false

    - name: updating rabbitmq erlang cookie                                                                                 // The file created above raju3.j2 
      template:                                                                                                             // Erlang cookie being replicated.
        src: raju3.j2
        dest: /var/lib/rabbitmq/.erlang.cookie

    - meta: flush_handlers

    - name: remove old erlang cookie                                                                                        // For safety purposes deleted the old erlang cookie 
      file:                                                                                                                 // Which might cause trouble in clustering
        path: /var/lib/rabbitmq/.erlang.cookie.old
        state: absent
      changed_when: false


                            ------------------------------------------Replicating HOSTS File------------------------------------

=> To Replicate Hosts File 
=> The ansible playbook BLOCKIN FILE Concept was used to replicate IP and Hosts Name.
     > ---
- name: RMQ
  hosts: all1   // all2
  become: true
  become_method: sudo
  tasks:
  - name: Copy /etc/hosts file                                                                                              
    blockinfile:
      dest: /etc/hosts
      block: |
        192.168.1.38 ans22
        192.168.1.49 ans40
        192.168.1.52 ans41
      backup: yes

=>Ansible blockinfile module is used to insert/update/remove a block of lines. The block will be surrounded by a marker 
   like begin and end, to make the task idempotent.

=> Example Output => In one of the Host Vm's.
=> 


# BEGIN ANSIBLE MANAGED BLOCK
192.168.1.38 ans22
192.168.1.49 ans40                                      // This resulted in blockinfile Concept
192.168.1.52 ans41
# END ANSIBLE MANAGED BLOCK



                ------------------------------------------POST adding the Erlang cookie and Host file-----------------------------------

=> Post replicating the hosts file and adding the erlang cookie 
=> The below yaml file was executed.
=> To check weather RMQ app is Up and Running.

---
- name: RMQ
  hosts: all4
  become: true
  become_method: sudo
  tasks:
    - name: rabbitmq service started and enabled
      service:
        name: rabbitmq-server
        enabled: yes
        state: started

    - name: rabbitmq service restart
      service:
        name: rabbitmq-server
        state: restarted

    - name: make sure rabbitmq app is up
      command: rabbitmqctl start_app


